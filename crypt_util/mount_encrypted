#!/usr/bin/env bash

GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No color

# print $1 in green
function log () {
    echo -e -n "${GREEN}"; echo -n "$1"; echo -e "${NC}"
}

# print $1 in red
function logError () {
    echo -e -n "${RED}"; echo -n "$1"; echo -e "${NC}"
}

# usage and exit function.
function usageAndExit () {
    echo -e "Usage: $0 [device] [mount-point]"
    echo -e "Example: $0 /dev/sdd1 /mnt/device"
    exit 1
}

if [ "$1" = "-h" ] || [ "$1" = "--help"  ]; then
    echo "Utiliy script to mount encrypted device"
    usageAndExit
fi

# check if this script is running as root
if [ $UID -ne 0 ]; then
    logError "$0 must be run as root."
    usageAndExit
fi

# check if correct number of parameters are passed to this script
if [ "$#" -ne 2 ]; then
    logError "Script arguments are missing!"
    usageAndExit
fi

# check if required packages are installed.
# if no dependencies required for this script, just skip it without modify.
# insert the required packages, space separated.
dep_req=( cryptsetup cryptmount mount )
dep_not_found=( ) # DO NOT EDIT THIS ARRAY
i=0
for dep in "${dep_req[@]}"
do
    q=$(dpkg-query -W -f='${Status}' "$dep" 2>/dev/null | grep -c "ok installed")
    if [ "$q" -eq 0 ]; then
        dep_not_found[$i]=${dep}
        ((i++))
    fi
done
if [ ${i} -ne 0 ]; then
    logError "Abort: Dependency package/s not found:"
    echo -n "${dep_not_found[@]}"
    echo ""
    exit 1
fi

device=$1
mount=$2
log "Device: ${device}"
log "Mount point: ${mount}"

cryptsetup luksOpen "${device}" crypt
mount -t auto /dev/mapper/crypt "${mount}"

echo -e "${GREEN}Device mounted on ${mount}${NC}"
log "Device mounted on ${mount}"
